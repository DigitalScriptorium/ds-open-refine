[
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "fast-label",
    "expression": "join ([coalesce(cells['fast-label'].value,''),coalesce(cells['aat-label'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "authorized_label_add",
    "columnInsertIndex": 7,
    "description": "Create column authorized_label_add at index 7 based on column fast-label using expression join ([coalesce(cells['fast-label'].value,''),coalesce(cells['aat-label'].value,'')],'')"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "genre-fast",
    "expression": "join ([coalesce(cells['genre-fast'].value,''),coalesce(cells['genre-aat'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "structured_value_add",
    "columnInsertIndex": 9,
    "description": "Create column structured_value_add at index 9 based on column genre-fast using expression join ([coalesce(cells['genre-fast'].value,''),coalesce(cells['genre-aat'].value,'')],'')"
  },
  {
    "op": "core/column-removal",
    "columnName": "fast-label",
    "description": "Remove column fast-label"
  },
  {
    "op": "core/column-removal",
    "columnName": "genre-fast",
    "description": "Remove column genre-fast"
  },
  {
    "op": "core/column-removal",
    "columnName": "aat-label",
    "description": "Remove column aat-label"
  },
  {
    "op": "core/column-removal",
    "columnName": "genre-aat",
    "description": "Remove column genre-aat"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "authorized_label",
    "expression": "join ([coalesce(cells['authorized_label'].value,''),coalesce(cells['authorized_label_add'].value,'')],'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label using expression join ([coalesce(cells['authorized_label'].value,''),coalesce(cells['authorized_label_add'].value,'')],'')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "structured_value",
    "expression": "join ([coalesce(cells['structured_value'].value,''),coalesce(cells['structured_value_add'].value,'')],'|')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value using expression join ([coalesce(cells['structured_value'].value,''),coalesce(cells['structured_value_add'].value,'')],'|')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "workflow_current",
    "expression": "grel:\"GENRE RECON, STEP 7: FINALIZED \"+now()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column workflow_current using expression grel:\"GENRE RECON, STEP 7: FINALIZED \"+now()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "workflow_history",
    "expression": "grel:value + \" | \" + cells[\"workflow_current\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column workflow_history using expression grel:value + \" | \" + cells[\"workflow_current\"].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "workflow_current",
    "expression": "grel:\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column workflow_current using expression grel:\"\""
  },
  {
    "op": "core/multivalued-cell-join",
    "columnName": "workflow_current",
    "keyColumnName": "row_index",
    "separator": "",
    "description": "Join multi-valued cells in column workflow_current"
  },
  {
    "op": "core/column-removal",
    "columnName": "workflow_current",
    "description": "Remove column workflow_current"
  }
]
