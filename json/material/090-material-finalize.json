[
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "material_as_recorded",
    "expression": "grel:if(isBlank(cells[\"structured_value\"]),value,\"\")",
    "onError": "set-to-blank",
    "newColumnName": "recon-material",
    "columnInsertIndex": 4,
    "description": "Create column recon-material at index 4 based on column material_as_recorded using expression grel:if(isBlank(cells[\"structured_value\"]),value,\"\")"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-material",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": "|",
    "regex": false,
    "description": "Split multi-valued cells in column recon-material"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-material",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": " and ",
    "regex": false,
    "description": "Split multi-valued cells in column recon-material"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-material",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": ", ",
    "regex": false,
    "description": "Split multi-valued cells in column recon-material"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-material",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": "with ",
    "regex": false,
    "description": "Split multi-valued cells in column recon-material"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-material",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": " (",
    "regex": false,
    "description": "Split multi-valued cells in column recon-material"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-material",
    "expression": "grel:value.replace(\"vellulm\",\"vellum\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column recon-material using expression grel:value.replace(\"vellulm\",\"vellum\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-material",
    "expression": "value.toLowercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column recon-material using expression value.toLowercase()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "recon-material",
    "expression": "grel:[]",
    "onError": "set-to-blank",
    "newColumnName": "authorized_label_add",
    "columnInsertIndex": 5,
    "description": "Create column authorized_label_add at index 5 based on column recon-material using expression grel:[]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"parchment\"),\"parchment\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"parchment\"),\"parchment\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"paper\"),\"paper\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"paper\"),\"paper\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"bark\"),\"bark\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"bark\"),\"bark\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"bamboo\"),\"bamboo\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"bamboo\"),\"bamboo\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"clay\"),\"clay\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"clay\"),\"clay\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"leaf\"),\"leaf\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"leaf\"),\"leaf\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"leather\"),\"leather\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"leather\"),\"leather\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"mica\"),\"mica\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"mica\"),\"mica\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"mixed\"),\"mixed media\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"mixed\"),\"mixed media\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"palm leaf\"),\"palm leaf\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"palm leaf\"),\"palm leaf\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"papyrus\"),\"papyrus\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"papyrus\"),\"papyrus\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"silk\"),\"silk\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"silk\"),\"silk\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"skin\"),\"skin\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"skin\"),\"skin\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"stone\"),\"stone\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"stone\"),\"stone\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"support\"),\"support\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"support\"),\"support\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"wax\"),\"wax\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"wax\"),\"wax\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"wood\"),\"wood\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"wood\"),\"wood\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"recon-material\"].value.contains(\"vellum\"),\"parchment\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"recon-material\"].value.contains(\"vellum\"),\"parchment\",value)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "authorized_label_add",
    "expression": "grel:[]",
    "onError": "set-to-blank",
    "newColumnName": "structured_value_add",
    "columnInsertIndex": 6,
    "description": "Create column structured_value_add at index 6 based on column authorized_label_add using expression grel:[]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"amate paper\",\"http://vocab.getty.edu/aat/300264681\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"amate paper\",\"http://vocab.getty.edu/aat/300264681\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"bark\",\"http://vocab.getty.edu/aat/300011860\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"authorized_label_add\"].value==\"bark\",\"http://vocab.getty.edu/aat/300011860\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"bamboo\",\"http://vocab.getty.edu/aat/300011873\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"bamboo\",\"http://vocab.getty.edu/aat/300011873\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"clay\",\"http://vocab.getty.edu/aat/300010439\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"clay\",\"http://vocab.getty.edu/aat/300010439\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"leaf\",\"http://vocab.getty.edu/aat/300011892\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"leaf\",\"http://vocab.getty.edu/aat/300011892\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"leather\",\"http://vocab.getty.edu/aat/300011845\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"leather\",\"http://vocab.getty.edu/aat/300011845\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"mica\",\"http://vocab.getty.edu/aat/300011124\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"mica\",\"http://vocab.getty.edu/aat/300011124\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"mixed media\",\"http://vocab.getty.edu/aat/300163347\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"mixed media\",\"http://vocab.getty.edu/aat/300163347\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"palm leaf\",\"http://vocab.getty.edu/aat/300011894\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"palm leaf\",\"http://vocab.getty.edu/aat/300011894\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"paper\",\"http://vocab.getty.edu/aat/300014109\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"paper\",\"http://vocab.getty.edu/aat/300014109\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"papyrus\",\"http://vocab.getty.edu/aat/300014127\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label_add using expression grel:if(cells[\"authorized_label_add\"].value==\"papyrus\",\"http://vocab.getty.edu/aat/300014127\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"parchment\",\"http://vocab.getty.edu/aat/300011851\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"parchment\",\"http://vocab.getty.edu/aat/300011851\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"silk\",\"http://vocab.getty.edu/aat/300243428\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"silk\",\"http://vocab.getty.edu/aat/300243428\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"skin\",\"http://vocab.getty.edu/aat/300011840\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"skin\",\"http://vocab.getty.edu/aat/300011840\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"stone\",\"http://vocab.getty.edu/aat/300011176\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"stone\",\"http://vocab.getty.edu/aat/300011176\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"support\",\"http://vocab.getty.edu/aat/300014844\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"support\",\"http://vocab.getty.edu/aat/300014844\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"wax\",\"http://vocab.getty.edu/aat/300014585\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"wax\",\"http://vocab.getty.edu/aat/300014585\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value_add",
    "expression": "grel:if(cells[\"authorized_label_add\"].value==\"wood\",\"http://vocab.getty.edu/aat/300011914\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value_add using expression grel:if(cells[\"authorized_label_add\"].value==\"wood\",\"http://vocab.getty.edu/aat/300011914\",value)"
  },
  {
    "op": "core/multivalued-cell-join",
    "columnName": "structured_value_add",
    "keyColumnName": "row_index",
    "separator": "|",
    "description": "Join multi-valued cells in column structured_value_add"
  },
  {
    "op": "core/multivalued-cell-join",
    "columnName": "authorized_label_add",
    "keyColumnName": "row_index",
    "separator": "|",
    "description": "Join multi-valued cells in column authorized_label_add"
  },
  {
    "op": "core/multivalued-cell-join",
    "columnName": "recon-material",
    "keyColumnName": "row_index",
    "separator": "|",
    "description": "Join multi-valued cells in column recon-material"
  },
  {
    "op": "core/column-removal",
    "columnName": "recon-material",
    "description": "Remove column recon-material"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "structured_value",
    "expression": "join ([coalesce(cells['structured_value'].value,''),coalesce(cells['structured_value_add'].value,'')],'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column structured_value using expression join ([coalesce(cells['structured_value'].value,''),coalesce(cells['structured_value_add'].value,'')],'')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "authorized_label",
    "expression": "join ([coalesce(cells['authorized_label'].value,''),coalesce(cells['authorized_label_add'].value,'')],'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column authorized_label using expression join ([coalesce(cells['authorized_label'].value,''),coalesce(cells['authorized_label_add'].value,'')],'')"
  },
  {
    "op": "core/column-removal",
    "columnName": "structured_value_add",
    "description": "Remove column structured_value_add"
  },
  {
    "op": "core/column-removal",
    "columnName": "authorized_label_add",
    "description": "Remove column authorized_label_add"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "workflow_current",
    "expression": "grel:\"MATERIAL RECON, STEP 3: FINALIZED \"+now()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column workflow_current using expression grel:\"MATERIAL RECON, STEP 3: FINALIZED \"+now()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "workflow_history",
    "expression": "grel:value + \" | \" + cells[\"workflow_current\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column workflow_history using expression grel:value + \" | \" + cells[\"workflow_current\"].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "workflow_current",
    "expression": "grel:\"\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column workflow_current using expression grel:\"\""
  },
  {
    "op": "core/multivalued-cell-join",
    "columnName": "workflow_current",
    "keyColumnName": "row_index",
    "separator": "",
    "description": "Join multi-valued cells in column workflow_current"
  },
  {
    "op": "core/column-removal",
    "columnName": "workflow_current",
    "description": "Remove column workflow_current"
  }
]
