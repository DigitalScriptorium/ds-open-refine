[
   {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "language_as_recorded",
    "expression": "grel:if(isBlank(cells[\"structured_value\"]),value,\"\")",
    "onError": "set-to-blank",
    "newColumnName": "recon-language",
    "columnInsertIndex": 5,
    "description": "Create column recon-language at index 5 based on column language_as_recorded using expression grel:if(isBlank(cells[\"structured_value\"]),value,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-language",
    "expression": "grel:value.replace(\".\",\"\").replace(\"Text in \",\"\").replace(\"In \",\"\"). replace(\" / \",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column recon-language using expression grel:value.replace(\".\",\"\").replace(\"Text in \",\"\").replace(\"In \",\"\"). replace(\" / \",\" \")"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-language",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": "|",
    "regex": false,
    "description": "Split multi-valued cells in column recon-language"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-language",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": "; ",
    "regex": false,
    "description": "Split multi-valued cells in column recon-language"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-language",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": ", ",
    "regex": false,
    "description": "Split multi-valued cells in column recon-language"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-language",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": "/",
    "regex": false,
    "description": "Split multi-valued cells in column recon-language"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-language",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": " and ",
    "regex": false,
    "description": "Split multi-valued cells in column recon-language"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-language",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": " with ",
    "regex": false,
    "description": "Split multi-valued cells in column recon-language"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-language",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": " (",
    "regex": false,
    "description": "Split multi-valued cells in column recon-language"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-language",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": ";",
    "regex": false,
    "description": "Split multi-valued cells in column recon-language"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-language",
    "expression": "grel:if(cells[\"recon-language\"].value.contains(\"Arabic\"),\"Arabic\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column recon-language using expression grel:if(cells[\"recon-language\"].value.contains(\"Arabic\"),\"Arabic\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-language",
    "expression": "grel:if(cells[\"recon-language\"].value.contains(\"Ottoman\"),\"Ottoman Turkish\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column recon-language using expression grel:if(cells[\"recon-language\"].value.contains(\"Ottoman\"),\"Ottoman Turkish\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-language",
    "expression": "grel:if(cells[\"recon-language\"].value.contains(\"Persian\"),\"Persian\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column recon-language using expression grel:if(cells[\"recon-language\"].value.contains(\"Persian\"),\"Persian\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-language",
    "expression": "grel:if(cells[\"recon-language\"].value.contains(\"Latin\"),\"Latin\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column recon-language using expression grel:if(cells[\"recon-language\"].value.contains(\"Latin\"),\"Latin\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-language",
    "expression": "grel:if(cells[\"recon-language\"].value.contains(\"Middle French\"),\"Middle French\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column recon-language using expression grel:if(cells[\"recon-language\"].value.contains(\"Middle French\"),\"Middle French\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-language",
    "expression": "grel:if(cells[\"recon-language\"].value.contains(\"Spanish\"),\"Spanish\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column recon-language using expression grel:if(cells[\"recon-language\"].value.contains(\"Spanish\"),\"Spanish\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-language",
    "expression": "grel:if(cells[\"recon-language\"].value.contains(\"Italian\"),\"Italian\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column recon-language using expression grel:if(cells[\"recon-language\"].value.contains(\"Italian\"),\"Italian\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-language",
    "expression": "grel:if(cells[\"recon-language\"].value.contains(\"Chinese\"),\"Chinese\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column recon-language using expression grel:if(cells[\"recon-language\"].value.contains(\"Chinese\"),\"Chinese\",value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-language",
    "expression": "grel:if(cells[\"recon-language\"].value.contains(\"Old French\"),\"Old French\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column recon-language using expression grel:if(cells[\"recon-language\"].value.contains(\"Old French\"),\"Old French\",value)"
  },
  {
    "op": "core/multivalued-cell-join",
    "columnName": "recon-language",
    "keyColumnName": "row_index",
    "separator": ",",
    "description": "Join multi-valued cells in column recon-language"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-language",
    "expression": "jython:deduped_list = list(set(value.split(\",\")))\nreturn ','.join(map(str, deduped_list))",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column recon-language using expression jython:deduped_list = list(set(value.split(\",\")))\nreturn ','.join(map(str, deduped_list))"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "recon-language",
    "keyColumnName": "row_index",
    "mode": "separator",
    "separator": ",",
    "regex": false,
    "description": "Split multi-valued cells in column recon-language"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-language",
    "config": {
      "mode": "standard-service",
      "service": "https://wikidata.reconci.link/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q34770",
        "name": "language"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column recon-language to type Q34770"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "workflow_current",
    "expression": "grel:\"LANGUAGE RECON, STEP 3: START LANGUAGE RECON \" + now()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column workflow_current using expression grel:\"LANGUAGE RECON, STEP 3: START LANGUAGE RECON \" + now()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "workflow_history",
    "expression": "grel:value + \" | \" + cells[\"workflow_current\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column workflow_history using expression grel:value + \" | \" + cells[\"workflow_current\"].value"
  }
]
