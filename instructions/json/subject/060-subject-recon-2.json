[
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "recon-subject",
    "expression": "grel:cell.recon.match.id",
    "onError": "set-to-blank",
    "newColumnName": "subject-id-1",
    "columnInsertIndex": 6,
    "description": "Create column subject-id-1 at index 6 based on column recon-subject using expression grel:cell.recon.match.id"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "recon-subject",
    "expression": "grel:cell.recon.match.name",
    "onError": "set-to-blank",
    "newColumnName": "subject-label-1",
    "columnInsertIndex": 6,
    "description": "Create column subject-label-1 at index 6 based on column recon-subject using expression grel:cell.recon.match.name"
  },
  {
    "op": "core/column-removal",
    "columnName": "recon-subject",
    "description": "Remove column recon-subject"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "subject-term",
    "expression": "grel:if(isBlank(cells[\"subject-id-1\"]),value,\"\")",
    "onError": "set-to-blank",
    "newColumnName": "subject-string",
    "columnInsertIndex": 5,
    "description": "Create column subject-string at index 5 based on column subject-term using expression grel:if(isBlank(cells[\"subject-id-1\"]),value,\"\")"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "subject-string",
    "guessCellType": false,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "--",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column subject-string by separator"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "subject-term",
    "expression": "grel:cells[\"subject-string 1\"].value+\"--\"+cells[\"subject-string 2\"].value",
    "onError": "set-to-blank",
    "newColumnName": "recon-subject",
    "columnInsertIndex": 5,
    "description": "Create column recon-subject at index 5 based on column subject-term using expression grel:cells[\"subject-string 1\"].value+\"--\"+cells[\"subject-string 2\"].value"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "recon-subject",
    "config": {
      "mode": "standard-service",
      "service": "http://localhost:5000/reconcile",
      "identifierSpace": "http://localhost/identifier",
      "schemaSpace": "http://localhost/schema",
      "type": {
        "id": "/fast/all",
        "name": "/fast/all"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column recon-subject to type /fast/all"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "workflow_current",
    "expression": "grel:\"SUBJECT RECON, STEP 6: START SUBJECT RECON 2 \"+now()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column workflow_current using expression grel:\"SUBJECT RECON, STEP 6: START SUBJECT RECON 2 \"+now()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "workflow_history",
    "expression": "grel:value + \" | \" + cells[\"workflow_current\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column workflow_history using expression grel:value + \" | \" + cells[\"workflow_current\"].value"
  }
]